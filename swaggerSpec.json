{
  "openapi": "3.0.0",
  "info": {
    "title": "WinnerTakesItAll",
    "version": "1.0.0",
    "description": "API documentation of the WinnerTakesItAll project"
  },
  "servers": [
    {
      "url": "http://localhost:3050",
      "description": "Local server"
    }
  ],
  "paths": {
    "/ban/oasis-ban": {
      "post": {
        "summary": "Ban a user by adding them to the OASIS database.",
        "description": "Allows an authenticated user to ban themselves by adding them to the OASIS database.",
        "tags": [
          "Ban"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanUser"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User successfully banned"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/ban/oasis-unban": {
      "post": {
        "summary": "Unban a user by removing them from the OASIS database.",
        "description": "Allows an authenticated user to unban themselves by removing them from the OASIS database.",
        "tags": [
          "Ban"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanUser"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User successfully unbanned"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/ban/status": {
      "get": {
        "summary": "Get the ban status of a user.",
        "description": "Enables the frontend to decide if the user is banned.",
        "tags": [
          "Ban"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/BanStatus"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/games/information": {
      "get": {
        "summary": "Get information about the active game.",
        "description": "This includes the prize pool and the duration of the game.",
        "tags": [
          "Games"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GameInformationResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/payments/pay": {
      "post": {
        "summary": "Make a payment and participate in the game",
        "description": "Allows an authenticated user to make a payment and participate in the active game.",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment successful and participation recorded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/payments/status": {
      "get": {
        "summary": "Check the payment status of a authenticated user",
        "description": "Enables the frontend to decide if the user has already payed.",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PaymentStatus"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user in the database after validating and hashing the password.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User registered successfully"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User login",
        "description": "Logs in a user with a username and password. Returns a session cookie in the response header.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserLoginResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "User logout",
        "description": "Logs out the user by destroying the session.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserLogoutResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/users/auth/status": {
      "get": {
        "summary": "Check if the user is logged in",
        "description": "Checks if the user is logged in by checking the session for the frontend. Returns true if the user is logged in.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserAuthStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/verification/verify": {
      "post": {
        "summary": "Verify a user's identity",
        "description": "Allows an authenticated user to verify their identity.",
        "tags": [
          "Verification"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Verification"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Verification successful"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/verification/status": {
      "get": {
        "summary": "Get the verification status of the authenticated user",
        "description": "Enables the frontend to decide if the user is allowed to access the game.",
        "tags": [
          "Verification"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Cookie"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/VerificationStatus"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegister": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "maxLength": 1024
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "maxLength": 1024
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "maxLength": 50
          }
        }
      },
      "Verification": {
        "type": "object",
        "required": [
          "idFrontImage",
          "personImage"
        ],
        "properties": {
          "idFrontImage": {
            "$ref": "#/components/schemas/Base64Type"
          },
          "personImage": {
            "$ref": "#/components/schemas/Base64Type"
          }
        }
      },
      "BanUser": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 1024
          }
        }
      },
      "Base64Type": {
        "type": "string",
        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
        "minLength": 1,
        "example": "JVBERi0...U9GCg=="
      },
      "Message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "maxLength": 1024
          }
        }
      }
    },
    "responses": {
      "DefaultErrorResponse": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "message"
              ],
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UserLoginResponse": {
        "description": "Login successful",
        "headers": {
          "Set-Cookie": {
            "schema": {
              "type": "string",
              "example": "connect.sid=s%3Ak3f; Path=/; HttpOnly"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        }
      },
      "UserLogoutResponse": {
        "description": "Logout successful",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        }
      },
      "GameInformationResponse": {
        "description": "Game information",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "prizePool",
                "endDate"
              ],
              "properties": {
                "prizePool": {
                  "type": "number"
                },
                "endDate": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "UserAuthStatusResponse": {
        "description": "User authentication status",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "loggedIn"
              ],
              "properties": {
                "loggedIn": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "VerificationStatus": {
        "description": "Verification status",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "verified"
              ],
              "properties": {
                "verified": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "BanStatus": {
        "description": "Ban status",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "banned"
              ],
              "properties": {
                "banned": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "PaymentStatus": {
        "description": "Payment status",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "paid"
              ],
              "properties": {
                "paid": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "Cookie": {
        "in": "header",
        "name": "Cookie",
        "schema": {
          "type": "string",
          "example": "connect.sid=s%3Ak3f; Path=/; HttpOnly"
        },
        "description": "Session cookie"
      }
    }
  },
  "tags": []
}